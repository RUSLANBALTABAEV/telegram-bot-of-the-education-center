from aiogram import Router, F, types
from sqlalchemy import select
from db.models import Certificate, User
from db.session import async_session
from config.bot_config import ADMIN_ID
from keyboards.reply import main_menu

certificates_router = Router()


@certificates_router.message(F.text == "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã")
async def show_all_certificates(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    async with async_session() as session:
        result = await session.execute(select(Certificate))
        certificates = result.scalars().all()

        if not certificates:
            await message.answer("üì≠ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.", reply_markup=main_menu(message.from_user.id))
            return

        for cert in certificates:
            user = await session.get(User, cert.user_id)
            text = f"üèÖ {cert.title}\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.name if user else cert.user_id}"
            await message.answer(text)

            if cert.file_id:
                try:
                    await message.answer_document(cert.file_id, caption="üìÑ –§–∞–π–ª —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞")
                except Exception:
                    await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.")

    await message.answer("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu(message.from_user.id))


@certificates_router.message(F.text == "–ú–æ–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã")
async def show_my_certificates(message: types.Message):
    async with async_session() as session:
        result_user = await session.execute(
            select(User).where(User.user_id == message.from_user.id)
        )
        user = result_user.scalar_one_or_none()

        if not user:
            await message.answer(
                "‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register.",
                reply_markup=main_menu(message.from_user.id)
            )
            return

        result = await session.execute(
            select(Certificate).where(Certificate.user_id == user.id)
        )
        certificates = result.scalars().all()

    if not certificates:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤.", reply_markup=main_menu(message.from_user.id))
        return

    for cert in certificates:
        await message.answer(f"üèÖ {cert.title}")

        if cert.file_id:
            try:
                await message.answer_document(cert.file_id, caption="üìÑ –í–∞—à —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")
            except Exception:
                await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.")

    await message.answer("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu(message.from_user.id))
