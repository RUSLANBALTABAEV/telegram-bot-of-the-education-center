from aiogram import Router, F, types
from aiogram.filters import Command
from sqlalchemy import select, delete, update
from sqlalchemy.orm import selectinload
from db.models import User, Course, async_session
from config.bot_config import ADMIN_ID
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery

admin_router = Router()

@admin_router.message(F.text == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
async def list_users(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    async with async_session() as session:
        result = await session.execute(select(User).options(selectinload(User.courses)))
        users = result.scalars().all()

    if not users:
        await message.answer("üì≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç.")
        return

    text = "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n"
    for u in users:
        text += f"‚Ä¢ {u.name} ({u.phone})\n"
    await message.answer(text)

# --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ ---
@admin_router.message(F.text == "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏")
async def manage_courses(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    async with async_session() as session:
        result = await session.execute(select(Course))
        courses = result.scalars().all()

    if not courses:
        await message.answer("üì≠ –ö—É—Ä—Å–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
        return

    for c in courses:
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_course:{c.id}"),
                    InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_course:{c.id}")
                ]
            ]
        )
        await message.answer(f"üìò {c.title}\nüí∞ {c.price} —Ä—É–±.\n{c.description or '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}",
                             reply_markup=keyboard)

# --- Callback —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---
@admin_router.callback_query(F.data.startswith("delete_course:"))
async def delete_course(callback: CallbackQuery):
    if callback.from_user.id != ADMIN_ID:
        await callback.answer("‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.", show_alert=True)
        return

    course_id = int(callback.data.split(":")[1])
    async with async_session() as session:
        course = await session.get(Course, course_id)
        if course:
            await session.delete(course)
            await session.commit()
            await callback.message.edit_text(f"üóë –ö—É—Ä—Å ¬´{course.title}¬ª —É–¥–∞–ª—ë–Ω.")
        else:
            await callback.answer("‚ö†Ô∏è –ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
